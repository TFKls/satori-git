#! /bin/sh

PREREQ=""
DESCRIPTION="Preconfiguring networking..."
IFFILE="/root/etc/network/interfaces"

prereqs()
{
       echo "$PREREQ"
}

case $1 in
# get pre-requisites
prereqs)
       prereqs
       exit 0
       ;;
esac

. /scripts/casper-functions

log_begin_msg "$DESCRIPTION"

if [ "${STATICIP}" = "frommedia" -a -e  "$IFFILE" ] ; then
    # will use existent /etc/network/interfaces
    log_end_msg
    exit 0
fi

cat > "$IFFILE" <<EOF
auto lo
iface lo inet loopback

EOF

/sbin/udevadm trigger
/sbin/udevadm settle

if [ -z "${NETBOOT}" -a -n "${STATICIP}" -a "${STATICIP}" != "frommedia" ]; then
    parsed=$(echo "${STATICIP}" | sed -e 's/:/ /g')
    for ifline in ${parsed}; do
        ifname="$(echo ${ifline} | cut -f1 -d ',')"
        ifaddress="$(echo ${ifline} | cut -f2 -d ',')"
        ifnetmask="$(echo ${ifline} | cut -f3 -d ',')"
        ifgateway="$(echo ${ifline} | cut -f4 -d ',')"
        cat >> "$IFFILE" <<EOF
auto ${ifname}
iface ${ifname} inet static
    address ${ifaddress}
    netmask ${ifnetmask}
    gateway ${ifgateway}

EOF
    done
else
    if [ -z "${NETBOOT}" ]; then
        # default, dhcp assigned
        method="dhcp"
    else
        # make sure that the preconfigured interface would not get reassigned by dhcp
        # on startup by ifup script - otherwise our root fs might be disconnected!
        method="manual"
    fi
    # iterate the physical interfaces and add them to the interfaces list
    if [ "$method" != dhcp ] || [ ! -x /root/usr/sbin/NetworkManager ]; then
        for interface in /sys/class/net/eth* /sys/class/net/ath* /sys/class/net/wlan*; do
            [ -e $interface ] || continue
            i="$(basename $interface)"
            cat >> "$IFFILE" <<EOF
auto $i
iface $i inet $method

EOF
        done
    fi
    if [ ! -f /root/etc/resolv.conf ] || [ -z "$(cat /root/etc/resolv.conf)" ] ||
        [ ! -f /root/etc/hostname ] || [ -z "$(cat /root/etc/hostname)" ] ||
        [ ! -f /root/etc/hosts ] || [ -z "$(cat /root/etc/hosts)" ]; then
	if [ -e /netboot.config ]; then
	    cp /netboot.config /root/var/log/netboot.config
	    ip=$(cat netboot.config | awk '/address:/{print $2}')
	    domain=$(cat netboot.config | awk '/domain :/{print $3}')
	    dns0=$(cat netboot.config | awk '/gateway:/{print $5}')
	    dns1=$(cat netboot.config | awk '/gateway:/{print $8}')
        hname=$(cat netboot.config | awk '/host   :/{print $3}')
	elif [ -n "${DEVICE}" ] && [ -e /tmp/net-"${DEVICE}".conf ]; then
	    cp /tmp/net-"${DEVICE}".conf /root/var/log/netboot.config
	    ip="$( . /tmp/net-"${DEVICE}".conf; echo "${IPV4ADDR}")"
	    domain="$( . /tmp/net-"${DEVICE}".conf; echo "${DNSDOMAIN}")"
	    dns0="$( . /tmp/net-"${DEVICE}".conf; echo "${IPV4DNS0}")"
	    dns1="$( . /tmp/net-"${DEVICE}".conf; echo "${IPV4DNS1}")"
	    hname="$( . /tmp/net-"${DEVICE}".conf; echo "${HOSTNAME}")"
	else
	    echo "Failed to configure networking"
	fi
	if [ "${dns0}" == "149.156.68.210" ]; then
		dns0="149.156.75.201"
	fi
        if [ -z "${hname}" -o -z "${domain}" ]; then
	    hostdom=`chroot /root host ${ip} ${dns0} |tail -n 1 |sed -e "s|^.* \([^.]*\)\.\(.*\)\.$|\1 \2|"`
            if [ -z "${hname}" ]; then
	        hname=`echo ${hostdom} |cut -d " " -f 1`
            fi
            if [ -z "${domain}" ]; then
	        domain=`echo ${hostdom} |cut -d " " -f 2`
            fi
        fi
        if [ -z "${hname}" ]; then
            hname="ubuntu"
        fi
        if [ -z "${domain}" ]; then
            domain="localdomain"
        fi
	rc_search="${domain}"
        rc_server0="nameserver ${dns0}"
	rc_server1="nameserver ${dns1}"
	if [ -z "${dns1}" -o "${dns1}" = "0.0.0.0" ]; then
	    rc_server1=""
	fi
        
        if [ ! -f /root/etc/resolv.conf ] || [ -z "$(cat /root/etc/resolv.conf)" ]; then
	    cat > /root/etc/resolv.conf <<EOF
# /etc/resolv.conf
# Autogenerated by casper
search ${rc_search}
domain ${rc_search}
${rc_server0}
${rc_server1}
EOF
	    cat /root/etc/resolv.conf >> /root/var/log/netboot.config
        fi
	if [ ! -f /root/etc/hostname ] || [ -z "$(cat /root/etc/hostname)" ]; then
	    cat > /root/etc/hostname <<EOF
${hname}
EOF
	    hostname "${hname}"
        fi
        if [ ! -f /root/etc/hosts ] || [ -z "$(cat /root/etc/hosts)" ]; then
	    cat > /root/etc/hosts <<EOF
# /etc/hosts
# Autogenerated by casper
127.0.0.1 localhost ${hname}

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
EOF
	    cat /root/etc/hosts >> /root/var/log/netboot.config
        fi
    fi
fi

if [ ! -x /root/usr/sbin/NetworkManager ]; then
    for i in eth0 eth1 eth2 ath0 wlan0; do
	grep -q "iface $i" $IFFILE && continue
	cat >> "$IFFILE" <<EOF
auto $i
iface $i inet dhcp

EOF
    done
fi

log_end_msg
