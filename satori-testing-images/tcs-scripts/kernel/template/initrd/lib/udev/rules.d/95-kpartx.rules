#
# persistent links for device-mapper devices
# only hardware-backed device-mapper devices (ie multipath, dmraid,
# and kpartx) have meaningful persistent device names
#

# Always attempt to load dm-multipath. This way we can get rid of the
# init script.
ACTION=="add|change", SUBSYSTEM=="block", \
	 RUN+="/sbin/modprobe -qba dm-multipath"

KERNEL!="dm-*", GOTO="kpartx_end"
ACTION=="remove", GOTO="kpartx_end"

# This is a temporary hack until Debian's dmsetup properly supports "dmsetup
# export". For more information see: #434241, #487881, #493078
IMPORT{program}="/lib/udev/dmsetup_env %M %m"

ENV{DM_TABLE_STATE}!="LIVE", GOTO="kpartx_end"

ENV{DM_UUID}=="?*", IMPORT{program}=="kpartx_id %M %m $env{DM_UUID}"

OPTIONS="link_priority=95"

# Create persistent links for multipath tables
ENV{DM_UUID}=="mpath-*", \
	SYMLINK+="disk/by-id/$env{DM_TYPE}-$env{DM_NAME}"

# Create persistent links for dmraid tables
ENV{DM_UUID}=="dmraid-*", \
        SYMLINK+="disk/by-id/$env{DM_TYPE}-$env{DM_NAME}"

# Create persistent links for partitions
ENV{DM_PART}=="?*", \
        SYMLINK+="disk/by-id/$env{DM_TYPE}-$env{DM_NAME}-part$env{DM_PART}"

# Create dm tables for partitions
ENV{DM_STATE}=="ACTIVE", ENV{DM_UUID}=="mpath-*", \
        RUN+="/sbin/dmsetup ls --target multipath --exec '/sbin/kpartx -a -p -part' -j %M -m %m"
ENV{DM_STATE}=="ACTIVE", ENV{DM_UUID}=="dmraid-*", \
        RUN+="/sbin/kpartx -a -p -part /dev/$kernel"

LABEL="kpartx_end"
